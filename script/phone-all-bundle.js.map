{"version":3,"sources":["webpack:///webpack/bootstrap 7622cfbe2c6dfac06ece?0e00","webpack:///./src/script/phone-all-countries.coffee","webpack:///./src/script/Phone.coffee","webpack:///./src/script/countries/ARG.coffee","webpack:///./src/script/countries/BRA.coffee","webpack:///./src/script/countries/CHL.coffee","webpack:///./src/script/countries/CAN.coffee","webpack:///./src/script/countries/COL.coffee","webpack:///./src/script/countries/ECU.coffee","webpack:///./src/script/countries/GTM.coffee","webpack:///./src/script/countries/GBR.coffee","webpack:///./src/script/countries/MEX.coffee","webpack:///./src/script/countries/PRY.coffee","webpack:///./src/script/countries/PER.coffee","webpack:///./src/script/countries/URY.coffee","webpack:///./src/script/countries/USA.coffee","webpack:///./src/script/PhoneNumber.coffee","webpack:///./src/script/countries/NANP.coffee"],"names":[],"mappings":"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C4kB,MAD5kB,EAColB,MADplB,EAC4lB,MAD5lB,EAComB,MADpmB,EAC4mB,MAD5mB,EAConB,MADpnB,EAC4nB,MAD5nB,EACooB,MADpoB,EAC4oB,MAD5oB,EACopB,MADppB,EAC4pB,MAD5pB,EACoqB,MADpqB,EAC4qB,MAD5qB,EACorB,MADprB,EAC4rB,MAD5rB,EACosB,MADpsB,EAC4sB,MAD5sB,EACotB,MADptB,EAC4tB,MAD5tB,EACouB,MADpuB,EAC4uB,MAD5uB,EACovB,MADpvB,EAC4vB,MAD5vB,EACowB,MADpwB,EAC4wB,MAD5wB,EACoxB,MADpxB,EAC4xB,MAD5xB,EACoyB,MADpyB,EAC4yB,MAD5yB,EACozB,MADpzB,EAC4zB,MAD5zB,EACo0B,MADp0B,EAC40B,MAD50B,EACo1B,MADp1B,EAC41B,MAD51B,EACo2B,MADp2B,EAC42B,MAD52B,EACo3B,MADp3B,EAC43B,MAD53B,EACo4B,MADp4B,EAC44B,MAD54B,EACo5B,MADp5B,EAC45B,MAD55B,EACo6B,MADp6B,EAC46B,MAD56B,EACo7B,MADp7B,EAC47B,MAD57B,EACo8B,MADp8B,EAC48B,MAD58B,EACo9B,MADp9B,EAC49B,MAD59B,EACo+B,MADp+B,EAC4+B,MAD5+B,EACo/B,MADp/B,EAC4/B,MAD5/B,EACogC,MADpgC,EAC4gC,MAD5gC,EACohC,MADphC,EAC4hC,MAD5hC,EACoiC,MADpiC,EAC4iC,MAD5iC,EACojC,MADpjC,EAC4jC,MAD5jC,EACokC,MADpkC,EAC4kC,MAD5kC,EAColC,MADplC,EAC4lC,MAD5lC,EAComC,MADpmC,EAC4mC,MAD5mC,EAConC,MADpnC,EAC4nC,MAD5nC,EACooC,MADpoC,EAC4oC,MAD5oC,EACopC,MADppC,EAC4pC,MAD5pC,EACoqC,MADpqC,EAC4qC,MAD5qC,EACorC,MADprC,EAC4rC,MAD5rC,EACosC,MADpsC,EAC4sC,MAD5sC,EACotC,MADptC,EAC4tC,MAD5tC,EACouC,MADpuC,EAC4uC,MAD5uC,EACovC,MADpvC,EAC4vC,MAD5vC,EACowC,MADpwC,EAC4wC,MAD5wC,EACoxC,MADpxC,EAC4xC,MAD5xC,EACoyC,MADpyC,EAC4yC,MAD5yC,EACozC,MADpzC,EAC4zC,MAD5zC,EACo0C,MADp0C,EAC40C,MAD50C,EACo1C,MADp1C,EAC41C,MAD51C,EACo2C,MADp2C,EAC42C,MAD52C,EACo3C,MADp3C,EAC43C,MAD53C,EACo4C,MADp4C,EAC44C,MAD54C,EACo5C,MADp5C,EAC45C,MAD55C,EACo6C,MADp6C,EAC46C,MAD56C,EACo7C,MADp7C,EAC47C,MAD57C,EACo8C,MADp8C,EAC48C,MAD58C,EACo9C,MADp9C,EAC49C,MAD59C,EACo+C,MADp+C,EAC4+C,MAD5+C,EACo/C,MADp/C,EAC4/C,MAD5/C,EACogD,MADpgD,EAC4gD,MAD5gD,EACohD,MADphD,EAC4hD,MAD5hD,EACoiD,MADpiD,EAC4iD,MAD5iD,EACojD,MADpjD,EAC4jD,MAD5jD,EACokD,MADpkD,EAC4kD,MAD5kD,EAColD,MADplD,EAC4lD,MAD5lD,EAComD,MADpmD,EAC4mD,MAD5mD,EAConD,MADpnD,EAC4nD,MAD5nD,EACooD,MADpoD,EAC4oD,MAD5oD,EACopD,MADppD,EAC4pD,MAD5pD,EACoqD,MADpqD,EAC4qD,MAD5qD,EACorD,MADprD,EAC4rD,MAD5rD,EACosD,MADpsD,EAC4sD,MAD5sD,EACotD,MADptD,EAC4tD,MAD5tD,EACouD,MADpuD,EAC4uD,MAD5uD,EACovD,MADpvD,EAC4vD,MAD5vD,EACowD,MADpwD,EAC4wD,MAD5wD,EACoxD,MADpxD,EAC4xD,MAD5xD,EACoyD,MADpyD,EAC4yD,MAD5yD,EACozD,MADpzD,EAC4zD,MAD5zD,EACo0D,MADp0D,EAC40D,MAD50D,EACo1D,MADp1D,EAC41D,MAD51D,EACo2D,MADp2D,EAC42D,MAD52D,EACo3D,MADp3D,EAC43D,MAD53D,EACo4D,MADp4D,EAC44D,MAD54D,EACo5D,MADp5D,EAC45D,MAD55D,EACo6D,M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d,EAC2d,KAD3d,EACie,KADje,EACue,KADve,EAC6e,KAD7e,EACmf,KADnf,EACyf,KADzf,EAC+f,KAD/f,EACqgB,KADrgB,EAC2gB,KAD3gB,EACihB,KADjhB,EACuhB,KADvhB,EAC6hB,KAD7hB,EACmiB,KADniB,EACyiB,KADziB,EAC+iB,KAD/iB,EACqjB,KADrjB,EAC2jB,KAD3jB,EACikB,KADjkB,EACukB,KADvkB,EAC6kB,KAD7kB,EACmlB,KADnlB,EACylB,KADzlB,EAC+lB,KAD/lB,EACqmB,KADrmB,EAC2mB,KAD3mB,EACinB,KADjnB,EACunB,KADvnB,EAC6nB,KAD7nB,EACmoB,KADnoB,EACyoB,KADzoB,EAC+oB,KAD/oB,EACqpB,KADrpB,EAC2pB,KAD3pB,EACiqB,KADjqB,EACuqB,KADvqB,EAC6qB,KAD7qB,EACmrB,KADnrB,EACyrB,KADzrB,EAC+rB,KAD/rB,EACqsB,KADrsB,EAC2sB,KAD3sB,EACitB,KADjtB,EACutB,KADvtB,EAC6tB,KAD7tB,EACmuB,KADnuB,EACyuB,KADzuB,EAC+uB,KAD/uB,EACqvB,KADrvB,EAC2vB,KAD3vB,EACiwB,KADjwB,EACuwB,KADvwB,EAC6wB,KAD7wB,EACmxB,KADnxB,EACyxB,KADzxB,EAC+xB,KAD/xB,EACqyB,KADryB,EAC2yB,KAD3yB,EACizB,KADjzB,EACuzB,KADvzB,EAC6zB,KAD7zB,EACm0B,KADn0B,EACy0B,KADz0B,EAC+0B,KAD/0B,EACq1B,KADr1B,EAC21B,KAD31B,EACi2B,KADj2B,EACu2B,KADv2B,EAC62B,KAD72B,EACm3B,KADn3B,EACy3B,KADz3B,EAC+3B,KAD/3B,EACq4B,KADr4B,EAC24B,KAD34B,EACi5B,KADj5B,EACu5B,KADv5B,EAC65B,KAD75B,EACm6B,KADn6B,EACy6B,KADz6B,EAC+6B,KAD/6B,EACq7B,KADr7B,EAC27B,KAD37B,EACi8B,KADj8B,EACu8B,KADv8B,EAC68B,KAD78B,EACm9B,KADn9B,EACy9B,KADz9B,EAC+9B,KAD/9B,EACq+B,KADr+B,EAC2+B,KAD3+B,EACi/B,KADj/B,EACu/B,KADv/B,EAC6/B,KAD7/B,EACmgC,KADngC,EACygC,KADzgC,EAC+gC,KAD/gC,EACqhC,KADrhC,EAC2hC,KAD3hC,EACiiC,KADjiC,EACuiC,KADviC,EAC6iC,KAD7iC,EACmjC,KADnjC,EACyjC,KADzjC,EAC+jC,KAD/jC,EACqkC,KADrkC,EAC2kC,KAD3kC,EACilC,KADjlC,EACulC,KADvlC,EAC6lC,KAD7lC,EACmmC,KADnmC,EACymC,KADzmC,EAC+mC,KAD/mC,EACqnC,KADrnC,EAC2nC,KAD3nC,EACioC,KADjoC,EACuoC,KADvoC,EAC6oC,KAD7oC,EACmpC,KADnpC,EACypC,KADzpC,EAC+pC,KAD/pC,EACqqC,KADrqC,EAC2qC,KAD3qC,EACirC,KADjrC,EACurC,KADvrC,EAC6rC,KAD7rC,EACmsC,KADnsC,EACysC,KADzsC,EAC+sC,KAD/sC,EACqtC,KADrtC,EAC2tC,KAD3tC,EACiuC,KADjuC,EACuuC,KADvuC,EAC6uC,KAD7uC,EACmvC,KADnvC,EACyvC,KADzvC,EAC+vC,KAD/vC,EACqwC,KADrwC,EAC2wC,KAD3wC,EACixC,KADjxC,EACuxC,KADvxC,EAC6xC,KAD7xC,EACmyC,KADnyC,EACyyC,KADzyC,EAC+yC,KAD/yC,EACqzC,KADrzC,EAC2zC,KAD3zC,EACi0C,KADj0C,EACu0C,KADv0C,EAC60C,KAD70C,EACm1C,KADn1C,EACy1C,KADz1C,EAC+1C,KAD/1C,EACq2C,KADr2C,EAC22C,KAD32C,EACi3C,KADj3C,EACu3C,KADv3C,EAC63C,KAD73C,EACm4C,KADn4C,EACy4C,KADz4C,EAC+4C,KAD/4C,EACq5C,KADr5C,EAC25C,KAD35C,EACi6C,KADj6C,EACu6C,KADv6C,EAC66C,KAD76C,EACm7C,KADn7C,EACy7C,KADz7C,EAC+7C,KAD/7C,EACq8C,KADr8C,EAC28C,KAD38C,EACi9C,KADj9C,EACu9C,KADv9C,EAC69C,KAD79C,EACm+C,KADn+C,EACy+C,KADz+C,EAC++C,KAD/+C,EACq/C,KADr/C,EAC2/C,KAD3/C,EACigD,KADjgD,EACugD,KADvgD,EAC6gD,KAD7gD,EACmhD,KADnhD,EACyhD,KADzhD,EAC+hD,KAD/hD,EACqiD,KADriD,EAC2iD,KAD3iD,EACijD,KADjjD,EACujD,KADvjD,EAC6jD,KAD7jD,EACmkD,KADnkD,EACykD,KADzkD,EAC+kD,KAD/kD,EACqlD,KADrlD,EAC2lD,KAD3lD,EACimD,KADjmD,EACumD,KADvmD,EAC6mD,KAD7mD,EACmnD,KADnnD,EACynD,KADznD,EAC+nD,KAD/nD,EACqoD,KADroD,EAC2oD,KAD3oD,EACipD,KADjpD,EACupD,KADvpD,EAC6pD,KAD7pD,EACmqD,KADnqD,EACyqD,KADzqD,EAC+qD,KAD/qD,EACqrD,KADrrD,EAC2rD,KAD3rD,EACisD,KADjsD,EACusD,KADvsD,EAC6sD,KAD7sD,EACmtD,KADntD,EACytD,KADztD,EAC+tD,KAD/tD,EACquD,KADruD,EAC2uD,KAD3uD,EACivD,KADjvD,EACuvD,KADvvD,EAC6vD,KAD7vD,EACmwD,KADnwD,EACywD,KADzwD,EAC+wD,KAD/wD,EACqxD,KADrxD,EAC2xD,KAD3xD,EACiyD,KADjyD,EACuyD,KADvyD,EAC6yD,KAD7yD,EACmzD,KADnzD,EACyzD,KADzzD,EAC+zD,KAD/zD,EACq0D,KADr0D,EAC20D,KAD30D,EACi1D,KADj1D,EACu1D,KADv1D,EAC61D,KAD71D,EACm2D,KADn2D,EACy2D,KADz2D,EAC+2D,KAD/2D,EACq3D,KADr3D,EAC23D,KAD33D,EACi4D,KADj4D,EACu4D,KADv4D,EAC64D,KAD74D,EACm5D,KADn5D,EACy5D,KADz5D,EAC+5D,KAD/5D,EACq6D,KADr6D,EAC26D,KAD36D,EACi7D,KADj7D,EACu7D,KADv7D,EAC67D,KAD77D,EACm8D,KADn8D,EACy8D,KADz8D,EAC+8D,KAD/8D,EACq9D,KADr9D,EAC29D,KAD39D,EACi+D,KADj+D,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pT,EAC2T,KAD3T,EACkU,KADlU,EACyU,KADzU,EACgV,KADhV,EACuV,KADvV,EAC8V,KAD9V,EACqW,KADrW,EAC4W,KAD5W,EACmX,KADnX,EAC0X,KAD1X,EACiY,KADjY,EACwY,KADxY,EAC+Y,KAD/Y,EACsZ,KADtZ,EAC6Z,KAD7Z,EACoa,KADpa,EAC2a,KAD3a,EACkb,KADlb,EACyb,KADzb,EACgc,KADhc,EACuc,KADvc,EAC8c,KAD9c,EACqd,KADrd,EAC4d,KAD5d,EACme,KADne,EAC0e,KAD1e,EACif,KADjf,EACwf,KADxf,EAC+f,KAD/f,EACsgB,KADtgB,EAC6gB,KAD7gB,EACohB,KADphB,EAC2hB,KAD3hB,EACkiB,KADliB,EACyiB,KADziB,EACgjB,KADhjB,EACujB,KADvjB,EAC8jB,KAD9jB,EACqkB,KADrkB,EAC4kB,KAD5kB,EACmlB,KADnlB,EAC0lB,KAD1lB,EACimB,KADjmB,EACwmB,KADxmB,EAC+mB,KAD/mB,EACsnB,KADtnB,EAC6nB,KAD7nB,EACooB,KADpoB,EAC2oB,KAD3oB,EACkpB,KADlpB,EACypB,KADzpB,EACgqB,KADhqB,EACuqB,KADvqB,EAC8qB,KAD9qB,EACqrB,KADrrB,EAC4rB,KAD5rB,EACmsB,KADnsB,EAC0sB,KAD1sB,EACitB,KADjtB,EACwtB,KADxtB,EAC+tB,KAD/tB,EACsuB,KADtuB,EAC6uB,KAD7uB,EACovB,KADpvB,EAC2vB,KAD3vB,EACkwB,KADlwB,EACywB,KADzwB,EACgxB,KADhxB,EACuxB,KADvxB,EAC8xB,KAD9xB,EACqyB,KADryB,EAC4yB,KAD5yB,EACmzB,KADnzB,EAC0zB,KAD1zB,EACi0B,KADj0B,EACw0B,KADx0B,EAC+0B,KAD/0B,EACs1B,KADt1B,EAC61B,KAD71B,EACo2B,KADp2B,EAC22B,KAD32B,EACk3B,KADl3B,EACy3B,KADz3B,EACg4B,KADh4B,EACu4B,KADv4B,EAC84B,KAD94B,EACq5B,KADr5B,EAC45B,KAD55B,EACm6B,KADn6B,EAC06B,KA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EACyK,KADzK,EACgL,KADhL,EACuL,KADvL,EAC8L,KAD9L,EACqM,KADrM,EAC4M,KAD5M,EACmN,KADnN,EAC0N,KAD1N,EACiO,KADjO,EACwO,KADxO,EAC+O,KAD/O,EACsP,KADtP,EAC6P,KAD7P,EACoQ,KADpQ,EAC2Q,KAD3Q,EACkR,KADlR,EACyR,KADzR,EACgS,KADhS,EACuS,KADvS,EAC8S,KAD9S,EACqT,KADrT,EAC4T,KAD5T,EACmU,KADnU,EAC0U,KAD1U,EACiV,KADjV,EACwV,KADxV,EAC+V,KAD/V,EACsW,KADtW,EAC6W,KAD7W,EACoX,KADpX,EAC2X,KAD3X,EACkY,KADlY,EACyY,KADzY,EACgZ,KADhZ,EACuZ,KADvZ,EAC8Z,KAD9Z,EACqa,KADra,EAC4a,KAD5a,EACmb,KADnb,EAC0b,KAD1b,EACic,KADjc,EACwc,KADxc,EAC+c,KAD/c,EACsd,KADtd,EAC6d,KAD7d,EACoe,KADpe,EAC2e,KAD3e,EACkf,KADlf,EACyf,KADzf,EACggB,KADhgB,EACugB,KADvgB,EAC8gB,KAD9gB,EACqhB,KADrhB,EAC4hB,KAD5hB,EACmiB,KADniB,EAC0iB,KAD1iB,EACijB,KADjjB,EACwjB,KADxjB,EAC+jB,KAD/jB,EACskB,KADtkB,EAC6kB,KAD7kB,EAColB,KADplB,EAC2lB,KAD3lB,EACkmB,KADlmB,EACymB,KADzmB,EACgnB,KADhnB,EACunB,KADvnB,EAC8nB,KAD9nB,EACqoB,KADroB,EAC4oB,KAD5oB,EACmpB,KADnpB,EAC0pB,KAD1pB,EACiqB,KADjqB,EACwqB,KADxqB,EAC+qB,KAD/qB,EACsrB,KADtrB,EAC6rB,KAD7rB,EACosB,KADpsB,EAC2sB,KAD3sB,EACktB,KADltB,EACytB,KADztB,EACguB,KADhuB,EACuuB,KADvuB,EAC8uB,KAD9uB,EACqvB,KADrvB,EAC4vB,KAD5vB,EACmwB,KADnwB,EAC0wB,KAD1wB,EACixB,KADjxB,EACwxB,KADxxB,EAC+xB,KAD/xB,EACsyB,KADtyB,EAC6yB,KAD7yB,EACozB,KADpzB,EAC2zB,KAD3zB,EACk0B,KADl0B,EACy0B,KADz0B,EACg1B,KADh1B,EACu1B,KADv1B,EAC81B,KAD91B,EACq2B,KADr2B,EAC42B,KAD52B,EACm3B,KADn3B,EAC03B,KAD13B,EACi4B,KADj4B,EACw4B,KADx4B,EAC+4B,KAD/4B,EACs5B,KADt5B,EAC65B,KAD75B,EACo6B,KADp6B,EAC26B,KAD36B,EACk7B,KADl7B,EACy7B,KADz7B,EACg8B,KADh8B,EACu8B,KADv8B,EAC88B,KAD98B,EACq9B,KADr9B,EAC49B,KAD59B,EACm+B,KADn+B,EAC0+B,KAD1+B,EACi/B,KADj/B,EACw/B,KADx/B,EAC+/B,KAD//B,EACsgC,KADtgC,EAC6gC,KAD7gC,EACohC,KADphC,EAC2hC,KAD3hC,EACkiC,KADliC,EACyiC,KADziC,EACgjC,KADhjC,EACujC,KADvjC,EAC8jC,KAD9jC,EACqkC,KADrkC,EAC4kC,KAD5kC,EACmlC,KADnlC,EAC0lC,KAD1lC,EACimC,KADjmC,EACwmC,KADxmC,EAC+mC,KAD/mC,EACsnC,KADtnC,EAC6nC,KAD7nC,EACooC,KADpoC,EAC2oC,KAD3oC,EACkpC,KADlpC,EACypC,KADzpC,EACgqC,KADhqC,EACuqC,KADvqC,EAC8qC,KAD9qC,EACqrC,KADrrC,EAC4rC,KAD5rC,EACmsC,KADnsC,EAC0sC,KAD1sC,EACitC,KADjtC,EACwtC,KADxtC,EAC+tC,KAD/tC,EACsuC,KADtuC,EAC6uC,KAD7uC,EACovC,KADpvC,EAC2vC,KAD3vC,EACkwC,KADlwC,EACywC,KADzwC,EACgxC,KADhxC,EACuxC,KADvxC,EAC8xC,KAD9xC,EACqyC,KADryC,EAC4yC,KAD5yC,EACmzC,KADnzC,EAC0zC,KAD1zC,EACi0C,KADj0C,EACw0C,KADx0C,EAC+0C,KAD/0C,EACs1C,KADt1C,EAC61C,KAD71C,EACo2C,KADp2C,EAC22C,KAD32C,EACk3C,KADl3C,EACy3C,KADz3C,EACg4C,KADh4C,EACu4C,KADv4C,EAC84C,KAD94C,EACq5C,KADr5C,EAC45C,KAD55C,EACm6C,KADn6C,EAC06C,KAD16C,EACi7C,KADj7C,EACw7C,KADx7C,EAC+7C,KAD/7C,EACs8C,KADt8C,EAC68C,KAD78C,EACo9C,KADp9C,EAC29C,KAD39C,EACk+C,KADl+C,EACy+C,KADz+C,EACg/C,KADh/C,EACu/C,KADv/C,EAC8/C,KAD9/C,EACqgD,KADrgD,EAC4gD,KAD5gD,EACmhD,KADnhD,EAC0hD,KAD1hD,EACiiD,KADjiD,EACwiD,KADxiD,EAC+iD,KAD/iD,EACsjD,KADtjD,EAC6jD,KAD7jD,EACokD,KADpkD,EAC2kD,KAD3kD,EACklD,KADllD,EACylD,KADzlD,EACgmD,KADhmD,EACumD,KADvmD,EAC8mD,KAD9mD,EACqnD,KADrnD,EAC4nD,KAD5nD,EACmoD,KADnoD,EAC0oD,KAD1oD,EACipD,KADjpD,EACwpD,KADxpD,EAC+pD,KAD/pD,EACsqD,KADtqD,EAC6qD,KAD7qD,EACorD,KADprD,EAC2rD,KAD3rD,EACksD,KADlsD,EACysD,KADzsD,EACgtD,KADhtD,EACutD,KADvtD,EAC8tD,KAD9tD,EACquD,KADruD,EAC4uD,KAD5uD,EACmvD,KADnvD,EAC0vD,KAD1vD,EACiwD,KADjwD,EACwwD,KADxwD,EAC+wD,KAD/wD,EACsxD,KADtxD,EAC6xD,KAD7xD,EACoyD,KADpyD,EAC2yD,KAD3yD,EACkzD,KADlzD,EACyzD,KADzzD,EACg0D,KADh0D,EACu0D,KADv0D,EAC80D,KAD90D,EACq1D,KADr1D,EAC41D,KAD51D,EACm2D,KADn2D,EAC02D,KAD12D,EACi3D,KADj3D,EACw3D,KADx3D,EAC+3D,KAD/3D,EACs4D,KADt4D,EAC64D,KAD74D,EACo5D,KADp5D,EAC25D,KAD35D,EACk6D,KADl6D,EACy6D,KADz6D,EACg7D,KADh7D,EACu7D,KADv7D,EAC87D,KAD97D,EACq8D,KADr8D,EAC48D,KAD58D,EACm9D,KADn9D,EAC09D,KAD19D,EACi+D,KADj+D,EACw+D,KADx+D,EAC++D,KAD/+D,EACs/D,KADt/D,EAC6/D,KAD7/D,EACogE,KADpgE,EAC2gE,KAD3gE,EACkhE,KADlhE,EACyhE,KADzhE,EACgiE,KADhiE,EACuiE,KADviE,EAC8iE,KAD9iE,EACqjE,KADrjE,EAC4jE,KAD5jE,EACmkE,KADnkE,EAC0kE,KAD1kE,EACilE,KADjlE,EACwlE,KADxlE,EAC+lE,KAD/lE,EACsmE,KADtmE,EAC6mE,KAD7mE,EAConE,KADpnE,EAC2nE,KAD3nE,EACkoE,KADloE,EACyoE,KADzoE,EACgpE,KADhpE,EACupE,KADvpE,EAC8pE,KAD9pE,EACqqE,KADrqE,EAC4qE,KAD5qE,EACmrE,KADnrE,EAC0rE,KAD1rE,CAPD;AAAA,KAUA,IAAC,8BAAD,GACC,CACC,KADD,EACQ,KADR,EACe,KADf,EACsB,KADtB,EAC6B,KAD7B,EACoC,KADpC,EAC2C,KAD3C,EACkD,KADlD,EACyD,KADzD,EACgE,KADhE,EACuE,KADvE,EAC8E,KAD9E,EACqF,KADrF,EAC4F,KAD5F,EACmG,KADnG,EAC0G,KAD1G,EACiH,KADjH,EACwH,KADxH,EAC+H,KAD/H,EACsI,KADtI,EAC6I,KAD7I,EACoJ,KADpJ,EAC2J,KAD3J,EACkK,KADlK,EACyK,KADzK,EACgL,KADhL,EACuL,KADvL,EAC8L,KAD9L,EACqM,KADrM,EAC4M,KAD5M,EACmN,KADnN,EAC0N,KAD1N,EACiO,KADjO,EACwO,KADxO,EAC+O,KAD/O,EACsP,KADtP,CAXD;AAAA,KAcA,IAAC,wBAAD,GAA2B,IAAC,2BAA0B,CAAC,MAA5B,CAAmC,IAAC,8BAApC,CAd3B,CADY;GAAA,CAAb;;AAAA,kBAiBA,eAAc,SAAC,kBAAD,EAAqB,UAArB,EAAiC,GAAjC;AACb,SAAG,UAAU,CAAC,MAAX,KAAqB,CAAxB;AACC,WAAG,aAAO,IAAC,8BAAR,WAAH;AACC,gBAAW,gBAAY,KAAZ,EAAmB,IAAC,YAApB,EAAiC,GAAjC,EAAsC,UAAtC,CAAX,CADD;QAAA;AAGC,gBAAW,gBAAY,KAAZ,EAAmB,IAAC,YAApB,EAAiC,GAAjC,EAAsC,UAAtC,CAAX,CAHD;QADD;MADa;GAAA,CAjBd;;AAAA,kBAwBA,cAAa,SAAC,MAAD;AACZ,SAAG,MAAM,CAAC,MAAP,KAAiB,CAApB;AACC,cAAO,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,KAAP,CAAa,gBAAb,CAAd,CAAP,CADD;MAAA;AAGA,YAAO,CAAC,MAAD,CAAP,CAJY;GAAA,CAxBb;;eAAA;;KARD;;AAAA,KAuCA,GAAW,UAvCX;;AAAA,MAwCK,CAAC,SAAU,KAAhB,GAAuB,IAxCvB;;AAAA,OA2CM,CAAC,OAAP,GAAiB,IA3CjB","file":"phone-all-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/@vtex/phone/script/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7622cfbe2c6dfac06ece\n **/","Phone = require('./Phone')\n\nargentina = require('./countries/ARG')\nbrazil    = require('./countries/BRA')\nchile     = require('./countries/CHL')\ncanada    = require('./countries/CAN')\ncolombia  = require('./countries/COL')\necuador   = require('./countries/ECU')\nguatemala = require('./countries/GTM')\ngbr       = require('./countries/GBR')\nmexico    = require('./countries/MEX')\nparaguay  = require('./countries/PRY')\nperu      = require('./countries/PER')\nuruguay   = require('./countries/URY')\nusa       = require('./countries/USA')\n\nwindow.vtex = window.vtex || {}\nwindow.vtex.phone = Phone\n\nmodule.exports = Phone\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/phone-all-countries.coffee\n **/","\nclass Phone\n\tconstructor: ->\n\t\t# Like so: +55 21 9898 6565\n\t\t@INTERNATIONAL = 0\n\n\t\t# Like so: (21) 9898-6565\n\t\t@NATIONAL = 1\n\n\t\t# And: 9898-6565\n\t\t@LOCAL = 2\n\n\t\t@countries = {}\n\n\tgetPhoneNational: (nationalNumber, givenCountryCode, givenNationalDestinationCode) =>\n\t\treturn null if nationalNumber is null\n\t\tnationalNumber = @normalize(nationalNumber) # Clean up number\n\n\t\tcountryObj = @countries[givenCountryCode]\n\t\tif not countryObj then return null\n\n\t\tif givenNationalDestinationCode\n\t\t\tnationalDestinationCode = givenNationalDestinationCode\n\t\t\t[foundNDC, ndcRegex] = @testNDC(nationalDestinationCode, countryObj, nationalNumber)\n\t\telse\n\t\t\tfor nationalDestinationCode in countryObj.nationalDestinationCode\n\t\t\t\t[foundNDC, ndcRegex] = @testNDC(nationalDestinationCode, countryObj, nationalNumber)\n\t\t\t\tbreak if foundNDC is true\n\n\t\tif not foundNDC then return null\n\n\t\twithoutNDC = nationalNumber.replace(ndcRegex, \"\")\n\n\t\tphoneNumber = countryObj.specialRules(nationalNumber, withoutNDC, nationalDestinationCode)\n\n\t\tif phoneNumber\n\t\t\tphoneNumber.valid(true)\n\t\t\treturn phoneNumber\n\t\telse\n\t\t\treturn null\n\n\tgetPhoneInternational: (number, givenCountryCode, givenNationalDestinationCode) =>\n\t\treturn null if number is null\n\t\tnumber = @normalize(number) # Clean up number\n\n\t\tif givenCountryCode\n\t\t\tcountryCode = givenCountryCode\n\t\t\t[foundCountryCode, countryCodeRegex] = @testCountryCode(countryCode, number)\n\t\telse\n\t\t\tfor countryCode, countryObj of @countries\n\t\t\t\t[foundCountryCode, countryCodeRegex] = @testCountryCode(countryCode, number)\n\t\t\t\tbreak if foundCountryCode is true\n\n\t\tif not foundCountryCode then return null\n\n\t\twithoutCountryCode = number.replace(countryCodeRegex, \"\")\n\t\treturn @getPhoneNational(withoutCountryCode, countryCode, givenNationalDestinationCode)\n\n\tnormalize: (number) =>\n\t\t# Remove whitespaces, parenthesis, slashes, dots, plus sign and letters\n\t\treturn number.replace(/\\ |\\(|\\)|\\-|\\.|[A-z]|\\+/g, \"\")\n\n\tcompact: (array) =>\n\t\tnewArray = []\n\t\tfor element in array\n\t\t\tnewArray.push element if element isnt \"\"\n\t\treturn newArray\n\n\tvalidate: (number, givenCountryCode) =>\n\t\treturn false if number is null\n\t\tnumber = @normalize(number)\n\n\t\tif givenCountryCode\n\t\t\treturn @countries[givenCountryCode].regex.test(number)\n\t\telse\n\t\t\tfor countryCode, countryObj of @countries\n\t\t\t\treturn true if countryObj.regex.test(number)\n\t\t\treturn false\n\n\ttestCountryCode: (countryCode, number) =>\n\t\tcountryCodeRegex = new RegExp \"^\"+countryCode\n\n\t\tif countryCodeRegex.test(number) then [true, countryCodeRegex] else [false, null]\n\n\ttestNDC: (nationalDestinationCode, countryObj, number) =>\n\t\tndcPattern = \"^(\"+countryObj.optionalTrunkPrefix+\"|)\"+nationalDestinationCode\n\t\tndcRegex = new RegExp ndcPattern\n\n\t\tif ndcRegex.test(number) then [true, ndcRegex] else [false, null]\n\n\tformat: (phone, format = @INTERNATIONAL) =>\n\t\treturn null if phone is null\n\n\t\tif @countries[phone.countryCode].format\n\t\t\treturn @countries[phone.countryCode].format(phone, format)\n\n\t\tresultString = \"\"\n\n\t\tsplitNumber = @countries[phone.countryCode].splitNumber(phone.number)\n\n\t\tswitch format\n\t\t\twhen @INTERNATIONAL\n\t\t\t\tresultString = \"+\" + phone.countryCode + \" \"\n\t\t\t\tif phone.nationalDestinationCode\n\t\t\t\t\tresultString += phone.nationalDestinationCode + \" \"\n\t\t\t\tresultString += splitNumber.join(\" \")\n\n\t\t\twhen @NATIONAL\n\t\t\t\tif phone.nationalDestinationCode\n\t\t\t\t\tresultString += \"(\" + phone.nationalDestinationCode + \") \"\n\t\t\t\tseparator = @countries[phone.countryCode].nationalNumberSeparator\n\t\t\t\tresultString += splitNumber.join(separator)\n\n\t\t\twhen @LOCAL\n\t\t\t\tseparator = @countries[phone.countryCode].nationalNumberSeparator\n\t\t\t\tresultString = splitNumber.join(separator)\n\n\t\treturn resultString\n\n\tgetCountryCodeByName: (name) =>\n\t\tfor key, value of @countries\n\t\t\tif value.countryName is name\n\t\t\t\treturn value.countryCode\n\n\tgetCountryCodeByNameAbbr: (nameAbbr) =>\n\t\tfor key, value of @countries\n\t\t\tif value.countryNameAbbr is nameAbbr\n\t\t\t\treturn value.countryCode\n\n# exports\nmodule.exports = new Phone()\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/Phone.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# https://www.numberingplans.com/?page=dialling&sub=areacodes\n# http://en.wikipedia.org/wiki/Local_conventions_for_writing_telephone_numbers#Argentina\n# http://cambiodenumeracion.movistararg.com/index_t.html\nclass Argentina\n\tconstructor: ->\n\t\t@countryName = \"Argentina\"\n\t\t@countryNameAbbr = \"ARG\"\n\t\t@countryCode = '54'\n\t\t@regex = /^(?:(?:\\+|)54|)(?:0|)(?:(?:9(?:0|)(?:(?:11\\d{8})|(?:2(?:20|21|23|30|36|37|49|60|61|63|64|66|80|91|94|97|98|99)|3(?:36|41|42|43|45|45|48|51|53|58|62|64|70|76|79|80|81|83|85|87|88))\\d{7})|(?:2(?:2(?:02|21|23|24|25|26|27|29|41|42|43|44|45|46|52|54|55|57|61|62|64|65|66|67|68|71|72|73|74|81|83|84|85|86|91|92|96|97)|3(?:02|14|16|17|20|23|24|25|26|31|33|34|35|37|38|42|43|44|45|46|52|53|54|55|56|57|58|92|93|94|95|96)|4(?:73|74|75|77|78)|6(?:22|24|25|26|46|47|48|51|55|56|57|58)|9(?:01|02|03|20|21|22|23|24|25|26|27|28|29|31|32|33|34|35|36|40|42|45|46|48|52|53|54|62|63|64|66|72|82|83))|3(?:3(?:27|29|82|85|87|88)|4(?:00|01|02|04|05|06|07|08|09|35|36|37|38|42|44|45|46|47|54|55|56|58|60|62|63|64|65|66|67|68|69|71|72|76|82|83|87|89|91|92|93|96|97|98)|5(?:21|22|24|25|32|33|37|41|42|43|44|46|47|48|49|62|63|64|71|72|73|74|75|76|82|83|84|85)|7(?:11|15|16|18|21|25|31|34|35|41|43|51|54|55|56|57|58|72|73|74|75|77|81|82|86)|8(?:21|25|26|27|32|35|37|38|41|43|44|45|46|54|55|56|57|58|61|62|63|65|67|68|69|73|76|77|78|85|86|87|88|91|92|94))\\d{6}))|(?:(?:11(?:15\\d{8}|(?!15)\\d{8}))|(?:(?:2(?:20|21|23|30|36|37|49|60|61|63|64|66|80|91|94|97|98|99)|3(?:36|41|42|43|45|45|48|51|53|58|62|64|70|76|79|80|81|83|85|87|88))(?:15\\d{7}|(?!15)\\d{7}))|(?:2(?:2(?:02|21|23|24|25|26|27|29|41|42|43|44|45|46|52|54|55|57|61|62|64|65|66|67|68|71|72|73|74|81|83|84|85|86|91|92|96|97)|3(?:02|14|16|17|20|23|24|25|26|31|33|34|35|37|38|42|43|44|45|46|52|53|54|55|56|57|58|92|93|94|95|96)|4(?:73|74|75|77|78)|6(?:22|24|25|26|46|47|48|51|55|56|57|58)|9(?:01|02|03|20|21|22|23|24|25|26|27|28|29|31|32|33|34|35|36|40|42|45|46|48|52|53|54|62|63|64|66|72|82|83))|3(?:3(?:27|29|82|85|87|88)|4(?:00|01|02|04|05|06|07|08|09|35|36|37|38|42|44|45|46|47|54|55|56|58|60|62|63|64|65|66|67|68|69|71|72|76|82|83|87|89|91|92|93|96|97|98)|5(?:21|22|24|25|32|33|37|41|42|43|44|46|47|48|49|62|63|64|71|72|73|74|75|76|82|83|84|85)|7(?:11|15|16|18|21|25|31|34|35|41|43|51|54|55|56|57|58|72|73|74|75|77|81|82|86)|8(?:21|25|26|27|32|35|37|38|41|43|44|45|46|54|55|56|57|58|61|62|63|65|67|68|69|73|76|77|78|85|86|87|88|91|92|94)))(?:15\\d{6}|(?!15)\\d{6})))$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = '-'\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'9', '11', '220', '221', '223', '230', '236','237', '249', '260', '261', '263', '264', '266', '280', '291', '294', '297', '298', '299', '336', '341', '342', '343', '345', '345', '348', '351', '353', '358', '362', '364', '370', '376', '379', '380', '381', '383', '385', '387', '388', '2202', '2221', '2223', '2224', '2225', '2226', '2227', '2229', '2241', '2242', '2243', '2244', '2245', '2246', '2252', '2254', '2255', '2257', '2261', '2262', '2264', '2265', '2266', '2267', '2268', '2271', '2272', '2273', '2274', '2281', '2283', '2284', '2285', '2286', '2291', '2292', '2296', '2297', '2302', '2314', '2316', '2317', '2320', '2323', '2324', '2325', '2326', '2331', '2333', '2334', '2335', '2337', '2338', '2342', '2343', '2344', '2345', '2346', '2352', '2353', '2354', '2355', '2356', '2357', '2358', '2392', '2393', '2394', '2395', '2396', '2473', '2474', '2475', '2477', '2478', '2622', '2624', '2625', '2626', '2646', '2647', '2648', '2651', '2655', '2656', '2657', '2658', '2901', '2902', '2903', '2920', '2921', '2922', '2923', '2924', '2925', '2926', '2927', '2928', '2929', '2931', '2932', '2933', '2934', '2935', '2936', '2940', '2942', '2945', '2946', '2948', '2952', '2953', '2954', '2962', '2963', '2964', '2966', '2972', '2982', '2983', '3327', '3329', '3382', '3385', '3387', '3388', '3400', '3401', '3402', '3404', '3405', '3406', '3407', '3408', '3409', '3435', '3436', '3437', '3438', '3442', '3444', '3445', '3446', '3447', '3454', '3455', '3456', '3458', '3460', '3462', '3463', '3464', '3465', '3466', '3467', '3468', '3469', '3471', '3472', '3476', '3482', '3483', '3487', '3489', '3491', '3492', '3493', '3496', '3497', '3498', '3521', '3522', '3524', '3525', '3532', '3533', '3537', '3541', '3542', '3543', '3544', '3546', '3547', '3548', '3549', '3562', '3563', '3564', '3571', '3572', '3573', '3574', '3575', '3576', '3582', '3583', '3584', '3585', '3711', '3715', '3716', '3718', '3721', '3725', '3731', '3734', '3735', '3741', '3743', '3751', '3754', '3755', '3756', '3757', '3758', '3772', '3773', '3774', '3775', '3777', '3781', '3782', '3786', '3821', '3825', '3826', '3827', '3832', '3835', '3837', '3838', '3841', '3843', '3844', '3845', '3846', '3854', '3855', '3856', '3857', '3858', '3861', '3862', '3863', '3865', '3867', '3868', '3869', '3873', '3876', '3877', '3878', '3885', '3886', '3887', '3888', '3891', '3892', '3894'\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\t\tif ndc is '9'\n\t\t\t\twithoutCountryCode = withoutNDC\n\n\t\t\t\tndcArray = @nationalDestinationCode.slice(1)\n\t\t\t\tfor nationalDestinationCode in ndcArray\n\t\t\t\t\t[foundNDC, ndcRegex] = Phone.testNDC(nationalDestinationCode, @, withoutCountryCode)\n\t\t\t\t\tbreak if foundNDC is true\n\t\t\t\treturn null if !foundNDC\n\t\t\t\twithoutNDC = withoutCountryCode.replace(ndcRegex, \"\")\n\t\t\t\treturn null if withoutNDC.length + nationalDestinationCode.length isnt 10\n\n\t\t\t\tphone.isMobile = true\n\t\t\t\tphone.nationalDestinationCode = nationalDestinationCode\n\t\t\t\tphone.number = withoutNDC\n\t\t\t\treturn phone\n\t\telse if /^15/.test(withoutNDC) and (ndc.length + withoutNDC.length) is 12\n\t\t\t\twithoutNDC = withoutNDC.replace(/^15/, \"\")\n\t\t\t\tphone.isMobile = true\n\t\t\t\tphone.number = withoutNDC\n\t\t\t\treturn phone\n\t\telse if (ndc.length + withoutNDC.length) is 10\n\t\t\treturn phone\n\n\n\tsplitNumber: (number) =>\n\t\tswitch number.length\n\t\t\twhen 8\n\t\t\t\treturn Phone.compact number.split(/(\\d{4})(\\d{4})/)\n\t\t\twhen 7\n\t\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\t\twhen 6\n\t\t\t\treturn Phone.compact number.split(/(\\d{2})(\\d{4})/)\n\n\t\treturn [number]\n\n\tformat: (phone, format = Phone.INTERNATIONAL) =>\n\t\tresultString = \"\"\n\n\t\tsplitNumber = Phone.countries[phone.countryCode].splitNumber(phone.number)\n\n\t\tswitch format\n\t\t\twhen Phone.INTERNATIONAL\n\t\t\t\tresultString = \"+\" + phone.countryCode + \" \"\n\t\t\t\tif phone.isMobile then resultString += \"9 \"\n\t\t\t\tif phone.nationalDestinationCode\n\t\t\t\t\tresultString += phone.nationalDestinationCode + \" \"\n\t\t\t\tresultString += splitNumber.join(\" \")\n\t\t\twhen Phone.NATIONAL\n\t\t\t\tif phone.nationalDestinationCode\n\t\t\t\t\tresultString += \"(\" + phone.nationalDestinationCode + \") \"\n\t\t\t\tseparator = Phone.countries[phone.countryCode].nationalNumberSeparator\n\t\t\t\tif phone.isMobile then resultString += \"15 \"\n\t\t\t\tresultString += splitNumber.join(separator)\n\t\t\twhen Phone.LOCAL\n\t\t\t\tseparator = Phone.countries[phone.countryCode].nationalNumberSeparator\n\t\t\t\tresultString = splitNumber.join(separator)\n\t\t\telse\n\t\t\t\tresultString = \"\"\n\n\t\treturn resultString\n\n# register\nargentina = new Argentina()\nPhone.countries['54'] = argentina\n\n# exports\nmodule.exports = argentina\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/ARG.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# https://www.numberingplans.com/?page=dialling&sub=areacodes\n# (1) http://www.anatel.gov.br/Portal/exibirPortalPaginaEspecialPesquisa.do?acao=&tipoConteudoHtml=1&codNoticia=27199\n# http://en.wikipedia.org/wiki/Local_conventions_for_writing_telephone_numbers#Brazil\nclass Brazil\n\tconstructor: ->\n\t\t@countryName = \"Brazil\"\n\t\t@countryNameAbbr = \"BRA\"\n\t\t@countryCode = '55'\n\t\t@regex = /^(?:(?:(?:\\+|)(?:55|)|))(?:0|)(?:(?:(?:1[1-9]|21|22|24|27|28|8[1-9]|9[1-9])(?:9\\d{8}|\\d{8}))|(?:(?:1[1-9]|21|22|24|27|28|3[1-8]|4[1-9]|5[1-5]|6[1-9]|7[1-5]|7[7-9]|8[1-9]|9[1-9])\\d{8}))$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = '-'\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'11', '12', '13', '14', '15', '16', '17', '18', '19', '21', '22', '24', '27', '28', '31', '32', '33', '34', '35', '36', '37', '38', '41', '42', '43', '44', '45', '46', '47', '48', '49', '51', '52', '53', '54', '55', '61', '62', '63', '64', '65', '66', '67', '68', '69', '71', '72', '73', '74', '75', '77', '78', '79', '81', '82', '83', '84', '85', '86', '87', '88', '89', '91', '92', '93', '94', '95', '96', '97', '98', '99'\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\t# Needs to be updated in 2015 (as in link (1) above)\n\t\tnineDigitsNDC = ['11','12','13','14','15','16','17','18','19','21','22','24','27','28', '91', '92', '93', '94', '95', '96', '97', '98', '99']\n\t\tnineDigitsPattern = new RegExp \"^(0|)(\"+nineDigitsNDC.join(\"|\")+\")\"\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\n\t\tif withoutNDC.length is 9 and withoutNDC.indexOf(\"9\") is 0 and nineDigitsPattern.test(ndc)\n\t\t\tphone.isMobile = true\n\t\t\treturn phone\n\t\telse\n\t\t\tif withoutNDC.length is 8 then return phone\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 8\n\t\t\treturn Phone.compact number.split(/(\\d{4})(\\d{4})/)\n\t\telse if number.length is 9 and number.indexOf(\"9\") is 0\n\t\t\treturn Phone.compact number.split(/(\\d{5})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\nbrazil = new Brazil()\nPhone.countries['55'] = brazil\n\n# exports\nmodule.exports = brazil\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/BRA.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# https://www.numberingplans.com/?page=dialling&sub=areacodes\n# http://www.howtocallabroad.com/chile/\n# (1) http://www.cambionumeracion.cl/?page_id=4\nclass Chile\n\tconstructor: ->\n\t\t@countryName = \"Chile\"\n\t\t@countryNameAbbr = \"CHL\"\n\t\t@countryCode = '56'\n\t\t@regex = /^(?:(?:\\+|)56|)(?:0|)(?:(?:(?:2|9)\\d{8})|(?:58\\d{7})|(?:(?:3[2345]|4[1235]|5[123578]|6[134578]|7[1235])\\d{6,7}))$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'2','32','33','34','35','41','42','43','45','51','52','53','55','57','58','61','63','64','65','67','68','71','72','73','75', '9' # 9 is mobile\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\t\tswitch ndc\n\t\t\twhen '2'\n\t\t\t\tif withoutNDC.length is 8 then return phone\n\t\t\twhen '9'\n\t\t\t\tif withoutNDC.length is 8\n\t\t\t\t\tphone.isMobile = true\n\t\t\t\t\tphone.nationalDestinationCode = ''\n\t\t\t\t\tphone.number = withoutCountryCode\n\t\t\t\t\treturn phone\n\t\t\twhen '58'\n\t\t\t\tif withoutNDC.length is 7 then return phone\n\t\t\telse\n\t\t\t# Should be updated based on link (1)\n\t\t\t\tif withoutNDC.length is 6 or withoutNDC.length is 7 then return phone\n\n\tsplitNumber: (number) =>\n\t\tswitch number.length\n\t\t\twhen 9\n\t\t\t\treturn Phone.compact number.split(/(\\d{1})(\\d{4})(\\d{4})/)\n\t\t\twhen 8\n\t\t\t\treturn Phone.compact number.split(/(\\d{4})(\\d{4})/)\n\t\t\twhen 7\n\t\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\t\twhen 6\n\t\t\t\treturn Phone.compact number.split(/(\\d{2})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\nchile = new Chile()\nPhone.countries['56'] = chile\n\n# exports\nmodule.exports = chile\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/CHL.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\nnanp = require('./NANP')\n\n# exports\nmodule.exports = nanp\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/CAN.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# https://www.numberingplans.com/?page=dialling&sub=areacodes\n# http://en.wikipedia.org/wiki/Telephone_numbers_in_Colombia\nclass Colombia\n\tconstructor: ->\n\t\t@countryName = \"Colombia\"\n\t\t@countryNameAbbr = \"COL\"\n\t\t@countryCode = '57'\n\t\t@regex = /^(?:(?:\\+|)57|)(?:0|)(?:(?:[12345678]\\d{7})|(?:3\\d{9}))$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'3(\\\\d{2})', '1', '2', '3', '4', '5', '6', '7', '8'\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, '', withoutNDC)\n\t\tif withoutCountryCode.indexOf('3') is 0 and withoutCountryCode.length is 10\n\t\t\tphone.isMobile = true\n\t\t\tphone.number = withoutCountryCode\n\t\t\tphone.nationalDestinationCode = ''\n\t\t\treturn phone\n\t\telse\n\t\t\tif withoutNDC.length is 7\n\t\t\t\tphone.nationalDestinationCode = ndc\n\t\t\t\treturn phone\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 7\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\telse if number.length is 10\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{3})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\ncolombia = new Colombia()\nPhone.countries['57'] = colombia\n\n# exports\nmodule.exports = colombia\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/COL.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# http://en.wikipedia.org/wiki/Telephone_numbers_in_Ecuador\n# http://www.howtocallabroad.com/ecuador/\nclass Ecuador\n\tconstructor: ->\n\t\t@countryName = \"Ecuador\"\n\t\t@countryNameAbbr = \"ECU\"\n\t\t@countryCode = '593'\n\t\t@regex = /^(?:(?:(?:\\+|)593)|)(?:0|)(?:(?:(?:[234567])\\d{7})|(?:9\\d{8}))$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'2', '3', '4', '5', '6', '7', '9'\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\t\tif withoutNDC.length is 7 and ndc isnt '9'\n\t\t\treturn phone\n\t\telse if ndc is '9'and withoutNDC.length is 8\n\t\t\tphone.isMobile = true\n\t\t\tphone.number = withoutCountryCode\n\t\t\tphone.nationalDestinationCode = ''\n\t\t\treturn phone\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 7\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\telse if number.length is 9\n\t\t\tif number.indexOf(\"9\") is 0\n\t\t\t\treturn Phone.compact number.split(/(\\d{2})(\\d{3})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\necuador = new Ecuador()\nPhone.countries['593'] = ecuador\n\n# exports\nmodule.exports = ecuador\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/ECU.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# https://en.wikipedia.org/wiki/Telephone_numbers_in_Guatemala\n# http://www.howtocallabroad.com/guatemala/\nclass Guatemala\n\tconstructor: ->\n\t\t@countryName = \"Guatemala\"\n\t\t@countryNameAbbr = \"GTM\"\n\t\t@countryCode = '502'\n\t\t@regex = /^(?:(?:\\+|)502|)(?:[2-7]\\d{7})$/\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode = ['2', '6', '7', '3', '4', '5']\n\t\t@mobileNumbers = ['3', '4', '5']\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\n\t\tif withoutCountryCode.length isnt 8\n\t\t\treturn null\n\t\tif ndc and withoutNDC[0] in @mobileNumbers\n\t\t\tphone.isMobile = true\n\t\t\tphone.nationalDestinationCode = ''\n\t\t\tphone.number = withoutCountryCode\n\t\telse\n\t\t\tphone.isMobile = false\n\n\t\treturn phone\n\n\tformat: (phone, format) =>\n\t\tresultString = \"\"\n\n\t\tsplitNumber = @splitNumber(phone.number)\n\n\t\tswitch format\n\t\t\twhen Phone.INTERNATIONAL\n\t\t\t\tresultString = \"+\" + phone.countryCode + \" \"\n\t\t\t\tresultString += splitNumber.join(\" \")\n\n\t\t\telse\n\t\t\t\tseparator = @nationalNumberSeparator\n\t\t\t\tresultString += splitNumber.join(separator)\n\n\t\treturn resultString\n\n\tsplitNumber: (number) =>\n\t\tswitch number.length\n\t\t\twhen 8\n\t\t\t\treturn Phone.compact number.split(/(\\d{4})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\nguatemala = new Guatemala()\nPhone.countries['502'] = guatemala\n\n# exports\nmodule.exports = guatemala\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/GTM.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# http://www.aa-asterisk.org.uk/index.php/Regular_Expressions_for_Validating_and_Formatting_GB_Telephone_Numbers#Formatting_GB_telephone_numbers\n# list of area codes from:\n# http://consumers.ofcom.org.uk/phone/numbering/telephone-area-codes-tool/\nclass UnitedKingdom\n\tconstructor: ->\n\t\t@countryName = \"United Kingdom\"\n\t\t@countryNameAbbr = \"GBR\"\n\t\t@countryCode = '44'\n\t\t@regex = /^\\(?(?:(?:0(?:0|11)\\)?[\\s-]?\\(?|)44\\)?[\\s-]?\\(?(?:0\\)?[\\s-]?\\(?)?|0)(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}|\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4}|\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3})|\\d{5}\\)?[\\s-]?\\d{4,5}|8(?:00[\\s-]?11[\\s-]?11|45[\\s-]?46[\\s-]?4\\d))(?:(?:[\\s-]?(?:x|ext\\.?\\s?|\\#)\\d+)?)$/\n\t\t@mobileRegex = /^7(?:[1-4]\\d\\d|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|624|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[04-9]\\d|1[02-9]|2[0-35-9]|3[0-689]))\\d{6}$/\n\t\t@splitRegexs =\n\t\t\t[{\n\t\t\t\t#Ranges 2d, 55, 56, 70, 76 (excluding 7624) with 10 digits\n\t\t\t\tvalidLengths: [10]\n\t\t\t\tleadingDigits: /^(?:2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9])))/,\n\t\t\t\tpattern: /^(\\d{2})(\\d{4})(\\d{4})$/,\n\t\t\t\tformat: \"$1 $2 $3\"\n\t\t\t},{\n\t\t\t\t#Ranges 11d, 1d1, 3dd, 9dd with 10 digits\n\t\t\t\tvalidLengths: [10]\n\t\t\t\tleadingDigits: /^(?:1(?:1|\\d1)|3[0347]|9[018])/,\n\t\t\t\tpattern: /^(\\d{3})(\\d{3})(\\d{4})$/,\n\t\t\t\tformat: \"$1 $2 $3\"\n\t\t\t},{\n\t\t\t\t#Ranges 1dddd with 9 or 10 digits\n\t\t\t\tvalidLengths: [9, 10]\n\t\t\t\tleadingDigits: /^(?:1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467))/,\n\t\t\t\tpattern: /^(\\d{5})(\\d{4,5})$/,\n\t\t\t\tformat: \"$1 $2\"\n\t\t\t},{\n\t\t\t\t#Ranges 1ddd with 9 or 10 digits\n\t\t\t\tvalidLengths: [9, 10]\n\t\t\t\tleadingDigits: /^1/,\n\t\t\t\tpattern: /^(1\\d{3})(\\d{5,6})$/,\n\t\t\t\tformat: \"$1 $2\"\n\t\t\t},{\n\t\t\t\t#Ranges 7ddd (including 7624) (not 70, 76) with 10 digits\n\t\t\t\tvalidLengths: [10]\n\t\t\t\tleadingDigits: /^7(?:[1-5789]|624)/,\n\t\t\t\tpattern: /^(7\\d{3})(\\d{6})$/,\n\t\t\t\tformat: \"$1 $2\"\n\t\t\t},{\n\t\t\t\t#Ranges 800 1111 with 7 digits : UK ChildLine\n\t\t\t\tvalidLengths: [7]\n\t\t\t\tleadingDigits: /^8001111/,\n\t\t\t\tpattern: /^(800)(\\d{4})$/,\n\t\t\t\tformat: \"$1 $2\"\n\t\t\t},{\n\t\t\t\t#Ranges 845 46 47 with 7 digits : UK NHS Direct\n\t\t\t\tvalidLengths: [7]\n\t\t\t\tleadingDigits: /^84546\\d/,\n\t\t\t\tpattern: /^(845)(46)(4\\d)$/,\n\t\t\t\tformat: \"$1 $2 $3\"\n\t\t\t},{\n\t\t\t\t#Ranges 84d, 87d with 10 digits\n\t\t\t\tvalidLengths: [10]\n\t\t\t\tleadingDigits: /^8(?:4[2-5]|7[0-3])/,\n\t\t\t\tpattern: /^(8\\d{2})(\\d{3})(\\d{4})$/,\n\t\t\t\tformat: \"$1 $2 $3\"\n\t\t\t},{\n\t\t\t\t#Ranges 80d (including 800) with 10 digits\n\t\t\t\tvalidLengths: [10]\n\t\t\t\tleadingDigits: /^80[08]/,\n\t\t\t\tpattern: /^(80\\d)(\\d{3})(\\d{4})$/,\n\t\t\t\tformat: \"$1 $2 $3\"\n\t\t\t},{\n\t\t\t\t#Ranges 500, 800 with 9 digits\n\t\t\t\tvalidLengths: [9]\n\t\t\t\tleadingDigits: /^[58]00/,\n\t\t\t\tpattern: /^([58]00)(\\d{6})$/,\n\t\t\t\tformat: \"$1 $2\"\n\t\t\t}]\n\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode = [\n\t\t\t\"20\", \"23\", \"24\", \"28\", \"29\"\n\t\t\t\"113\", \"114\", \"115\", \"116\", \"117\", \"118\", \"1200\",\n\t\t\t\"1202\", \"1204\", \"1205\", \"1206\", \"1207\", \"1208\", \"1209\",\n\t\t\t\"121\", \"1223\", \"1224\", \"1225\", \"1226\", \"1227\", \"1228\",\n\t\t\t\"1229\", \"1233\", \"1234\", \"1235\", \"1236\", \"1237\", \"1239\",\n\t\t\t\"1241\", \"1242\", \"1243\", \"1244\", \"1245\", \"1246\", \"1248\",\n\t\t\t\"1249\", \"1250\", \"1252\", \"1253\", \"1254\", \"1255\", \"1256\",\n\t\t\t\"1257\", \"1258\", \"1259\", \"1260\", \"1261\", \"1262\", \"1263\",\n\t\t\t\"1264\", \"1267\", \"1268\", \"1269\", \"1270\", \"1271\", \"1273\",\n\t\t\t\"1274\", \"1275\", \"1276\", \"1277\", \"1278\", \"1279\", \"1280\",\n\t\t\t\"1282\", \"1283\", \"1284\", \"1285\", \"1286\", \"1287\", \"1288\",\n\t\t\t\"1289\", \"1290\", \"1291\", \"1292\", \"1293\", \"1294\", \"1295\",\n\t\t\t\"1296\", \"1297\", \"1298\", \"1299\", \"1300\", \"1301\", \"1302\",\n\t\t\t\"1303\", \"1304\", \"1305\", \"1306\", \"1307\", \"1308\", \"1309\",\n\t\t\t\"131\", \"1320\", \"1322\", \"1323\", \"1324\", \"1325\", \"1326\",\n\t\t\t\"1327\", \"1328\", \"1329\", \"1330\", \"1332\", \"1333\", \"1334\",\n\t\t\t\"1335\", \"1337\", \"1339\", \"1340\", \"1341\", \"1342\", \"1343\",\n\t\t\t\"1344\", \"1346\", \"1347\", \"1348\", \"1349\", \"1350\", \"1352\",\n\t\t\t\"1353\", \"1354\", \"1355\", \"1356\", \"1357\", \"1358\", \"1359\",\n\t\t\t\"1360\", \"1361\", \"1362\", \"1363\", \"1364\", \"1366\", \"1367\",\n\t\t\t\"1368\", \"1369\", \"1371\", \"1372\", \"1373\", \"1375\", \"1376\",\n\t\t\t\"1377\", \"1379\", \"1380\", \"1381\", \"1382\", \"1383\", \"1384\",\n\t\t\t\"1386\", \"1387\", \"13873\", \"1388\", \"1389\", \"1392\", \"1394\",\n\t\t\t\"1395\", \"1397\", \"1398\", \"1400\", \"1403\", \"1404\", \"1405\",\n\t\t\t\"1406\", \"1407\", \"1408\", \"1409\", \"141\", \"1420\", \"1422\",\n\t\t\t\"1423\", \"1424\", \"1425\", \"1427\", \"1428\", \"1429\", \"1430\",\n\t\t\t\"1431\", \"1432\", \"1433\", \"1434\", \"1435\", \"1436\", \"1437\",\n\t\t\t\"1438\", \"1439\", \"1440\", \"1442\", \"1443\", \"1444\", \"1445\",\n\t\t\t\"1446\", \"1449\", \"1450\", \"1451\", \"1452\", \"1453\", \"1454\",\n\t\t\t\"1455\", \"1456\", \"1457\", \"1458\", \"1460\", \"1461\", \"1462\",\n\t\t\t\"1463\", \"1464\", \"1465\", \"1466\", \"1467\", \"1469\", \"1470\",\n\t\t\t\"1471\", \"1472\", \"1473\", \"1474\", \"1475\", \"1476\", \"1477\",\n\t\t\t\"1478\", \"1479\", \"1480\", \"1481\", \"1482\", \"1483\", \"1484\",\n\t\t\t\"1485\", \"1487\", \"1488\", \"1489\", \"1490\", \"1491\", \"1492\",\n\t\t\t\"1493\", \"1494\", \"1495\", \"1496\", \"1497\", \"1499\", \"1501\",\n\t\t\t\"1502\", \"1503\", \"1505\", \"1506\", \"1507\", \"1508\", \"1509\",\n\t\t\t\"151\", \"1520\", \"1522\", \"1524\", \"15242\", \"1525\", \"1526\",\n\t\t\t\"1527\", \"1528\", \"1529\", \"1530\", \"1531\", \"1534\", \"1535\",\n\t\t\t\"1536\", \"1538\", \"1539\", \"15394\", \"15395\", \"15396\", \"1540\",\n\t\t\t\"1542\", \"1543\", \"1544\", \"1545\", \"1546\", \"1547\", \"1548\",\n\t\t\t\"1549\", \"1550\", \"1553\", \"1554\", \"1555\", \"1556\", \"1557\",\n\t\t\t\"1558\", \"1559\", \"1560\", \"1561\", \"1562\", \"1563\", \"1564\",\n\t\t\t\"1565\", \"1566\", \"1567\", \"1568\", \"1569\", \"1570\", \"1571\",\n\t\t\t\"1572\", \"1573\", \"1575\", \"1576\", \"1577\", \"1578\", \"1579\",\n\t\t\t\"1580\", \"1581\", \"1582\", \"1583\", \"1584\", \"1586\", \"1588\",\n\t\t\t\"1590\", \"1591\", \"1592\", \"1593\", \"1594\", \"1595\", \"1597\",\n\t\t\t\"1598\", \"1599\", \"1600\", \"1603\", \"1604\", \"1606\", \"1608\",\n\t\t\t\"1609\", \"161\", \"1620\", \"1621\", \"1622\", \"1623\", \"1624\",\n\t\t\t\"1625\", \"1626\", \"1628\", \"1629\", \"1630\", \"1631\", \"1633\",\n\t\t\t\"1634\", \"1635\", \"1636\", \"1637\", \"1638\", \"1639\", \"1641\",\n\t\t\t\"1642\", \"1643\", \"1644\", \"1646\", \"1647\", \"1650\", \"1651\",\n\t\t\t\"1652\", \"1653\", \"1654\", \"1655\", \"1656\", \"1659\", \"1661\",\n\t\t\t\"1663\", \"1664\", \"1665\", \"1666\", \"1667\", \"1668\", \"1669\",\n\t\t\t\"1670\", \"1671\", \"1672\", \"1673\", \"1674\", \"1675\", \"1676\",\n\t\t\t\"1677\", \"1678\", \"1680\", \"1681\", \"1683\", \"1684\", \"1685\",\n\t\t\t\"1686\", \"1687\", \"1688\", \"1689\", \"1690\", \"1691\", \"1692\",\n\t\t\t\"1694\", \"1695\", \"1697\", \"16973\", \"16974\", \"1698\", \"1700\",\n\t\t\t\"1702\", \"1704\", \"1706\", \"1707\", \"1708\", \"1709\", \"1720\",\n\t\t\t\"1721\", \"1722\", \"1723\", \"1724\", \"1725\", \"1726\", \"1727\",\n\t\t\t\"1728\", \"1729\", \"1730\", \"1732\", \"1733\", \"1736\", \"1737\",\n\t\t\t\"1738\", \"1740\", \"1743\", \"1744\", \"1745\", \"1746\", \"1747\",\n\t\t\t\"1748\", \"1749\", \"1750\", \"1751\", \"1752\", \"1753\", \"1754\",\n\t\t\t\"1756\", \"1757\", \"1758\", \"1759\", \"1760\", \"1761\", \"1763\",\n\t\t\t\"1764\", \"1765\", \"1766\", \"1767\", \"1768\", \"17683\", \"17684\",\n\t\t\t\"17687\", \"1769\", \"1770\", \"1771\", \"1772\", \"1773\", \"1775\",\n\t\t\t\"1776\", \"1777\", \"1778\", \"1779\", \"1780\", \"1782\", \"1784\",\n\t\t\t\"1785\", \"1786\", \"1787\", \"1788\", \"1789\", \"1790\", \"1792\",\n\t\t\t\"1793\", \"1794\", \"1795\", \"1796\", \"1797\", \"1798\", \"1799\",\n\t\t\t\"1803\", \"1805\", \"1806\", \"1807\", \"1808\", \"1809\", \"1821\",\n\t\t\t\"1822\", \"1823\", \"1824\", \"1825\", \"1827\", \"1828\", \"1829\",\n\t\t\t\"1830\", \"1832\", \"1833\", \"1834\", \"1835\", \"1837\", \"1838\",\n\t\t\t\"1840\", \"1841\", \"1842\", \"1843\", \"1844\", \"1845\", \"1847\",\n\t\t\t\"1848\", \"1851\", \"1852\", \"1854\", \"1855\", \"1856\", \"1857\",\n\t\t\t\"1858\", \"1859\", \"1862\", \"1863\", \"1864\", \"1865\", \"1866\",\n\t\t\t\"1869\", \"1870\", \"1871\", \"1872\", \"1873\", \"1874\", \"1875\",\n\t\t\t\"1876\", \"1877\", \"1878\", \"1879\", \"1880\", \"1882\", \"1883\",\n\t\t\t\"1884\", \"1885\", \"1886\", \"1887\", \"1888\", \"1889\", \"1890\",\n\t\t\t\"1892\", \"1895\", \"1896\", \"1899\", \"1900\", \"1902\", \"1903\",\n\t\t\t\"1904\", \"1905\", \"1908\", \"1909\", \"191\", \"1920\", \"1922\",\n\t\t\t\"1923\", \"1924\", \"1925\", \"1926\", \"1928\", \"1929\", \"1931\",\n\t\t\t\"1932\", \"1933\", \"1934\", \"1935\", \"1937\", \"1938\", \"1939\",\n\t\t\t\"1942\", \"1943\", \"1944\", \"1945\", \"1946\", \"19467\", \"1947\",\n\t\t\t\"1948\", \"1949\", \"1950\", \"1951\", \"1952\", \"1953\", \"1954\",\n\t\t\t\"1955\", \"1957\", \"1959\", \"1962\", \"1963\", \"1964\", \"1967\",\n\t\t\t\"1968\", \"1969\", \"1970\", \"1971\", \"1972\", \"1974\", \"1975\",\n\t\t\t\"1977\", \"1978\", \"1980\", \"1981\", \"1982\", \"1983\", \"1984\",\n\t\t\t\"1985\", \"1986\", \"1987\", \"1988\", \"1989\", \"1992\", \"1993\",\n\t\t\t\"1994\", \"1995\", \"1997\"\n\t\t]\n\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\t\tif withoutNDC.length is 10 and @mobileRegex.test(withoutNDC)\n\t\t\tphone.isMobile = true\n\n\t\treturn phone\n\n\tsplitNumber: (number) =>\n\t\tfindSplitter = do ->\n\t\t\t(nmbr, splitRegexs) ->\n\t\t\t\tfor potentialSplitGrp in splitRegexs\n\t\t\t\t\tif nmbr.length in potentialSplitGrp.validLengths and potentialSplitGrp.leadingDigits.test(nmbr)\n\t\t\t\t\t\treturn potentialSplitGrp\n\n\t\tsplitter = findSplitter(number, @splitRegexs)\n\n\t\tif splitter\n\t\t\treturn Phone.compact number.split(splitter.pattern)\n\t\telse\n\t\t\treturn [number]\n\n# register\nuk = new UnitedKingdom()\nPhone.countries['44'] = uk\n\n# exports\nmodule.exports = uk\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/GBR.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# http://www.sre.gob.mx/austin/Util/LadasMexico.html\nclass Mexico\n\tconstructor: ->\n\t\t@countryName = \"Mexico\"\n\t\t@countryNameAbbr = \"MEX\"\n\t\t@countryCode = '52'\n\t\t@regex = /^(?:(?:\\+|)52|)(?:(?:33|55|81)\\d{8}|(?:22[2-9]|23[1-35-8]|24[13-9]|27[1-9]|28[1-578]|29[467]|31[1-9]|32[1-9]|34[1-9]|35[1-9]|37[1-9]|38[1-9]|39[1-5]|41[1-5]|41[7-9|42[1-9]|43[1-8]|44[1-57-9]|45[1-9]|46[1-9]|47[1-8]|48[1-35-9]|49[2-689]|588|59[1-79]|61[2-68]|62[1-9]|63[1-9]|64[1-9]|65[1-3689]|66[12457-9]|67[1-7]|68[67]|69[4-8]|71[1-9]|72[1-9]|73[1-9]|74[1-9]|75[13-9]|76[1-9]|77[1-9]|78[1-69]|79[17]|82[13-9]|83[1-6]|84[124-6]|86[1246-9]|87[1-378]|89[12479]|91[346-9]|92[1-4]|93[2-46-8]|95[1348]|96[1-9]|97[12]|98[1-7]|99[1-9])\\d{7})$/\n\t\t@optionalTrunkPrefix = ''\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t\"33\", \"55\", \"81\", \"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"231\",\"232\",\"233\",\"235\",\"236\",\"237\",\"238\",\"241\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"278\",\"279\",\"281\",\"282\",\"283\",\"284\",\"285\",\"287\",\"288\",\"294\",\"296\",\"297\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\",\"318\",\"319\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\",\"328\",\"329\",\"341\",\"342\",\"343\",\"344\",\"345\",\"346\",\"347\",\"348\",\"349\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\",\"358\",\"359\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\",\"378\",\"379\",\"381\",\"382\",\"383\",\"384\",\"385\",\"386\",\"387\",\"388\",\"389\",\"391\",\"392\",\"393\",\"394\",\"395\",\"411\",\"412\",\"413\",\"414\",\"415\",\"417\",\"418\",\"419\",\"421\",\"422\",\"423\",\"424\",\"425\",\"426\",\"427\",\"428\",\"429\",\"431\",\"432\",\"433\",\"434\",\"435\",\"436\",\"437\",\"438\",\"441\",\"442\",\"443\",\"444\",\"445\",\"447\",\"448\",\"449\",\"451\",\"452\",\"453\",\"454\",\"455\",\"456\",\"457\",\"458\",\"459\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\",\"468\",\"469\",\"471\",\"472\",\"473\",\"474\",\"475\",\"476\",\"477\",\"478\",\"481\",\"482\",\"483\",\"485\",\"486\",\"487\",\"488\",\"489\",\"492\",\"493\",\"494\",\"495\",\"496\",\"498\",\"499\",\"588\",\"591\",\"592\",\"593\",\"594\",\"595\",\"596\",\"597\",\"599\",\"612\",\"613\",\"614\",\"615\",\"616\",\"618\",\"621\",\"622\",\"623\",\"624\",\"625\",\"626\",\"627\",\"628\",\"629\",\"631\",\"632\",\"633\",\"634\",\"635\",\"636\",\"637\",\"638\",\"639\",\"641\",\"642\",\"643\",\"644\",\"645\",\"646\",\"647\",\"648\",\"649\",\"651\",\"652\",\"653\",\"656\",\"658\",\"659\",\"661\",\"662\",\"664\",\"665\",\"667\",\"668\",\"669\",\"671\",\"672\",\"673\",\"674\",\"675\",\"676\",\"677\",\"686\",\"687\",\"694\",\"695\",\"696\",\"697\",\"698\",\"711\",\"712\",\"713\",\"714\",\"715\",\"716\",\"717\",\"718\",\"719\",\"721\",\"722\",\"723\",\"724\",\"725\",\"726\",\"727\",\"728\",\"729\",\"731\",\"732\",\"733\",\"734\",\"735\",\"736\",\"737\",\"738\",\"739\",\"741\",\"742\",\"743\",\"744\",\"745\",\"746\",\"747\",\"748\",\"749\",\"751\",\"753\",\"754\",\"755\",\"756\",\"757\",\"758\",\"759\",\"761\",\"762\",\"763\",\"764\",\"765\",\"766\",\"767\",\"768\",\"769\",\"771\",\"772\",\"773\",\"774\",\"775\",\"776\",\"777\",\"778\",\"779\",\"781\",\"782\",\"783\",\"784\",\"785\",\"786\",\"789\",\"791\",\"797\",\"821\",\"823\",\"824\",\"825\",\"826\",\"827\",\"828\",\"829\",\"831\",\"832\",\"833\",\"834\",\"835\",\"836\",\"841\",\"842\",\"844\",\"845\",\"846\",\"861\",\"862\",\"864\",\"866\",\"867\",\"868\",\"869\",\"871\",\"872\",\"873\",\"877\",\"878\",\"891\",\"892\",\"894\",\"897\",\"899\",\"913\",\"914\",\"916\",\"917\",\"918\",\"919\",\"921\",\"922\",\"923\",\"924\",\"932\",\"933\",\"934\",\"936\",\"937\",\"938\",\"951\",\"953\",\"954\",\"958\",\"961\",\"962\",\"963\",\"964\",\"965\",\"966\",\"967\",\"968\",\"969\",\"971\",\"972\",\"981\",\"982\",\"983\",\"984\",\"985\",\"986\",\"987\",\"988\",\"991\",\"992\",\"993\",\"994\",\"995\",\"996\",\"997\",\"998\",\"999\"\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tif withoutNDC.length is 7 or withoutNDC.length is 8\n\t\t\treturn new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 7\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\telse if number.length is 8\n\t\t\treturn Phone.compact number.split(/(\\d{4})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\nmexico = new Mexico()\nPhone.countries['52'] = mexico\n\n# exports\nmodule.exports = mexico\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/MEX.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# http://www.copaco.com.py/portal/index.php/atencion-al-cliente/8-empresa/74-codigos-de-area.html\n# http://en.wikipedia.org/wiki/Telephone_numbers_in_Paraguay\nclass Paraguay\n\tconstructor: ->\n\t\t@countryName = \"Paraguay\"\n\t\t@countryNameAbbr = \"PRY\"\n\t\t@countryCode = '595'\n\t\t@regex = /^(?:(?:\\+|)595|)(?:0|)(?:(?:(?:21|3[289]|4[14-8]|61|7[123]|8[13])(?:\\d{7}))|(?:(?:21|3[289]|4[14-8]|61|7[123]|8[13]|2(?:2[04568]|7[15]|9[1-5])|3(?:18|3[0167]|4[2357]|5[01]|60|70)|4(?:18|2[045]|3[12]|5[13]|64|71|9[1-47])|5(?:1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[02-4]|7[0-3]|80)|6(?:3[1-3]|44|60|7[1-46-8])|7(?:17|4[0-4]|50|6[2-578]|7[05]|8[0-8]|90)|858|9(?:6[12]|7[1-356]|8[1-5]|9[1-35]))(?:\\d{6})))$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'21', '32', '38', '39', '41', '44', '46', '47', '48', '61', '71', '72', '73', '81', '83', '220', '224', '225', '226', '228', '271', '275', '291', '292', '293', '294', '295', '318', '330', '331', '336', '337', '342', '343', '345', '347', '350', '351', '360', '370', '418', '420', '424', '425', '431', '432', '451', '453', '464', '471', '491', '492', '493', '494', '497', '510', '511', '512', '513', '514', '515', '516', '517', '518', '519', '520', '521', '522', '523', '524', '525', '526', '527', '528', '529', '530', '531', '532', '533', '534', '535', '536', '537', '538', '539', '540', '541', '542', '543', '544', '545', '546', '547', '548', '549', '550', '552', '553', '554', '570', '571', '572', '573', '580', '631', '632', '633', '644', '660', '671', '672', '673', '674', '676', '677', '678', '717', '740', '741', '742', '743', '744', '750', '762', '763', '764', '765', '767', '768', '770', '775', '780', '781', '782', '783', '784', '785', '786', '787', '788', '790', '858', '961', '962', '971', '972', '973', '975', '976', '981', '982', '983', '984', '985', '991', '992', '993', '995'\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\n\t\tif ndc.length is 3 and ndc[0] is '9'\n\t\t\tphone.isMobile = true\n\n\t\treturn phone\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 7\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\telse\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{3})/)\n\n\t\treturn [number]\n\n# register\nparaguay = new Paraguay()\nPhone.countries['595'] = paraguay\n\n# exports\nmodule.exports = paraguay\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/PRY.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# https://www.numberingplans.com/?page=dialling&sub=areacodes\n# http://www.howtocallabroad.com/peru/\nclass Peru\n\tconstructor: ->\n\t\t@countryName = \"Peru\"\n\t\t@countryNameAbbr = \"PER\"\n\t\t@countryCode = '51'\n\t\t@regex = /^(?:(?:\\+|)51|)(?:0|)(?:(?:1\\d{7})|(?:9\\d{8})|(?:(?:4[1-4]|5[1-46]|6[1-7]|7[2346]|8[234])\\d{6}))$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'1','9','41','42','43','44','51','52','53','54','56','61','62','63','64','65','66','67','72','73','74','76','82','83','84'\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\t\tif ndc is '1' and withoutNDC.length is 7\n\t\t\treturn phone\n\t\telse if ndc is '9' and withoutNDC.length is 8\n\t\t\tphone.isMobile = true\n\t\t\tphone.nationalDestinationCode = ''\n\t\t\tphone.number = withoutCountryCode\n\t\t\treturn phone\n\t\telse if ndc.length is 2 and withoutNDC.length is 6\n\t\t\treturn phone\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 6\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{3})/)\n\t\telse if number.length is 7\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\telse if number.length is 9\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{3})(\\d{3})/)\n\n\t\treturn [number]\n\n# register\nperu = new Peru()\nPhone.countries['51'] = peru\n\n# exports\nmodule.exports = peru\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/PER.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# http://en.wikipedia.org/wiki/Telephone_numbers_in_Uruguay\n# https://www.numberingplans.com/?page=dialling&sub=areacodes\n# http://www.howtocallabroad.com/uruguay/\nclass Uruguay\n\tconstructor: ->\n\t\t@countryName = \"Uruguay\"\n\t\t@countryNameAbbr = \"URY\"\n\t\t@countryCode = '598'\n\t\t@regex = /^(?:(?:\\+|)598|)(?:0|)(?:[249]\\d{7})$/\n\t\t@optionalTrunkPrefix = '0'\n\t\t@nationalNumberSeparator = ' '\n\t\t@nationalDestinationCode =\n\t\t\t[\n\t\t\t\t'2', '4', '9' # 9 is mobile\n\t\t\t]\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tphone = new PhoneNumber(@countryNameAbbr, @countryCode, ndc, withoutNDC)\n\t\tif (ndc.length + withoutNDC.length) is 8\n\t\t\tif ndc is '9'\n\t\t\t\tphone.isMobile = true\n\t\t\tphone.nationalDestinationCode = ''\n\t\t\tphone.number = withoutCountryCode\n\t\t\treturn phone\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 7\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\t\telse if number.length is 8\n\t\t\treturn Phone.compact number.split(/(\\d{4})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\nuruguay = new Uruguay()\nPhone.countries['598'] = uruguay\n\n# exports\nmodule.exports = uruguay\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/URY.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\nnanp = require('./NANP')\n\n# exports\nmodule.exports = nanp\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/USA.coffee\n **/","\nclass PhoneNumber\n\tconstructor: (countryNameAbbr, countryCode, nationalDestinationCode, number) ->\n\t\t@countryNameAbbr = countryNameAbbr\n\t\t@countryCode = countryCode\n\t\t@nationalDestinationCode = nationalDestinationCode\n\t\t@number = number\n\t\t@isMobile = null\n\n\tvalid: (isValid) =>\n\t\t@valid = isValid\n\nmodule.exports = PhoneNumber\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/PhoneNumber.coffee\n **/","\nPhone = require('../Phone')\nPhoneNumber = require('../PhoneNumber')\n\n# For more info check:\n# http://countrycode.org/usa\n# https://en.wikipedia.org/wiki/Telephone_numbers_in_Canada\n# http://www.howtocallabroad.com/canada/\nclass NANP\n\tconstructor: ->\n\t\t@countryName = \"NANP\"\n\t\t@countryNameAbbr = \"USA/CAN\"\n\t\t@countryCode = '1'\n\t\t@regex = /^(?:(?:(?:\\+|)(?:1|))|)(?:1|)(?:2(?:0[1-9]|1[02-9]|2[4-9]|3[1469]|4[089]|5[01-46]|6[0279]|7[0468]|8[139])|3(?:0[1-9]|1[02-9]|2[0235]|3[014679]|4[137]|5[12]|6[01459]|8[056])|4(?:0[1-9]|1[02-9]|2[345]|3[0-24578]|4[023578]|50|6[49]|7[0589]|8[04]|50[1-57-9])|5(?:06|1[02-5-89]|20|3[014]|4[01]|5[179]|6[1-47]|7[013-59]|8[01567])|6(?:0[1-9]|1[0234-9]|2[036-8]|3[0169]|4[167]|5[0179]|6[01279]|7[89]|8[129])|7(?:0[1-9]|1[2-9]|2[047]|3[01247]|4[07]|5[247]|6[02-59]|7[02-589]|8[0156])|8(?:0[1-8]|1[0-9]|28|3[0-25]|4[3578]|5[06-9]|6[02-57]|7[0238])|9(?:0[1-9]|1[02-9]|2[0578]|3[15-8]|4[0179]|5[124679]|7[0-3589]|8[045]|89))\\d{7}$/\n\t\t@optionalTrunkPrefix = '1'\n\t\t@nationalNumberSeparator = ' '\n\t\t@usaNationalDestinationCode =\n\t\t\t[\n\t\t\t\t'201', '202', '203', '205', '206', '207', '208', '209', '209', '210', '212', '213', '214', '215', '216', '217', '218', '219', '224', '225', '227', '228', '229', '231', '234', '239', '240', '248', '251', '252', '253', '254', '256', '260', '262', '267', '269', '270', '274', '276', '278', '281', '283', '301', '302', '303', '304', '305', '307', '308', '309', '310', '312', '313', '314', '315', '316', '317', '318', '319', '320', '321', '323', '325', '330', '331', '334', '336', '337', '339', '341', '347', '351', '352', '360', '361', '364', '369', '380', '385', '386', '401', '402', '404', '405', '406', '407', '408', '409', '410', '412', '413', '414', '415', '417', '419', '423', '424', '425', '430', '432', '434', '435', '440', '442', '443', '445', '447', '458', '464', '469', '470', '475', '478', '479', '480', '484', '501', '502', '503', '504', '505', '507', '508', '509', '510', '512', '513', '515', '516', '517', '518', '520', '530', '531', '534', '540', '541', '551', '557', '559', '561', '562', '563', '564', '567', '570', '571', '573', '574', '575', '580', '585', '586', '601', '602', '603', '605', '606', '607', '608', '609', '610', '612', '614', '615', '616', '617', '618', '619', '620', '623', '626', '627', '628', '630', '631', '636', '641', '646', '650', '651', '657', '659', '660', '661', '662', '667', '669', '678', '679', '681', '682', '689', '701', '702', '703', '704', '706', '707', '708', '712', '713', '714', '715', '716', '717', '718', '719', '720', '724', '727', '730', '731', '732', '734', '737', '740', '747', '752', '754', '757', '760', '762', '763', '764', '765', '769', '770', '772', '773', '774', '775', '779', '781', '785', '786', '801', '802', '803', '804', '805', '806', '808', '810', '812', '813', '814', '815', '816', '817', '818', '828', '830', '831', '832', '835', '843', '845', '847', '848', '850', '856', '857', '858', '859', '860', '862', '863', '864', '865', '870', '872', '878', '901', '903', '904', '906', '907', '908', '909', '910', '912', '913', '914', '915', '916', '917', '918', '919', '920', '925', '927', '928', '931', '935', '936', '937', '938', '940', '941', '947', '949', '951', '952', '954', '956', '957', '959', '970', '971', '972', '973', '975', '978', '979', '980', '984', '985', '989'\n\t\t\t]\n\t\t@canadaNationalDestinationCode =\n\t\t\t[\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '403', '416', '418', '431', '437', '438', '450', '506', '514', '519', '579', '581', '587', '604', '613', '639', '647', '705', '709', '778', '780', '807', '819', '867', '873', '902', '905'\n\t\t\t]\n\t\t@nationalDestinationCode = @usaNationalDestinationCode.concat(@canadaNationalDestinationCode)\n\n\tspecialRules: (withoutCountryCode, withoutNDC, ndc) =>\n\t\tif withoutNDC.length is 7\n\t\t\tif ndc in @canadaNationalDestinationCode\n\t\t\t\treturn new PhoneNumber('CAN', @countryCode, ndc, withoutNDC)\n\t\t\telse\n\t\t\t\treturn new PhoneNumber('USA', @countryCode, ndc, withoutNDC)\n\n\tsplitNumber: (number) =>\n\t\tif number.length is 7\n\t\t\treturn Phone.compact number.split(/(\\d{3})(\\d{4})/)\n\n\t\treturn [number]\n\n# register\nnanp = new NANP()\nPhone.countries['1'] = nanp\n\n# exports\nmodule.exports = nanp\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/script/countries/NANP.coffee\n **/"],"sourceRoot":""}